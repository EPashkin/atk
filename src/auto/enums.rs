// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use ffi;
use glib::StaticType;
use glib::Type;
use glib::translate::*;
use glib::value::FromValue;
use glib::value::FromValueOptional;
use glib::value::SetValue;
use glib::value::Value;
use gobject_ffi;

#[derive(Debug, Eq, PartialEq, Ord, PartialOrd, Hash)]
#[derive(Clone, Copy)]
pub enum Layer {
    Invalid,
    Background,
    Canvas,
    Widget,
    Mdi,
    Popup,
    Overlay,
    Window,
    #[doc(hidden)]
    __Unknown(i32),
}

#[doc(hidden)]
impl ToGlib for Layer {
    type GlibType = ffi::AtkLayer;

    fn to_glib(&self) -> ffi::AtkLayer {
        match *self {
            Layer::Invalid => ffi::ATK_LAYER_INVALID,
            Layer::Background => ffi::ATK_LAYER_BACKGROUND,
            Layer::Canvas => ffi::ATK_LAYER_CANVAS,
            Layer::Widget => ffi::ATK_LAYER_WIDGET,
            Layer::Mdi => ffi::ATK_LAYER_MDI,
            Layer::Popup => ffi::ATK_LAYER_POPUP,
            Layer::Overlay => ffi::ATK_LAYER_OVERLAY,
            Layer::Window => ffi::ATK_LAYER_WINDOW,
            Layer::__Unknown(value) => value
        }
    }
}

#[doc(hidden)]
impl FromGlib<ffi::AtkLayer> for Layer {
    fn from_glib(value: ffi::AtkLayer) -> Self {
        skip_assert_initialized!();
        match value {
            0 => Layer::Invalid,
            1 => Layer::Background,
            2 => Layer::Canvas,
            3 => Layer::Widget,
            4 => Layer::Mdi,
            5 => Layer::Popup,
            6 => Layer::Overlay,
            7 => Layer::Window,
            value => Layer::__Unknown(value),
        }
    }
}

impl StaticType for Layer {
    fn static_type() -> Type {
        unsafe { from_glib(ffi::atk_layer_get_type()) }
    }
}

impl<'a> FromValueOptional<'a> for Layer {
    unsafe fn from_value_optional(value: &Value) -> Option<Self> {
        Some(FromValue::from_value(value))
    }
}

impl<'a> FromValue<'a> for Layer {
    unsafe fn from_value(value: &Value) -> Self {
        from_glib(gobject_ffi::g_value_get_enum(value.to_glib_none().0))
    }
}

impl SetValue for Layer {
    unsafe fn set_value(value: &mut Value, this: &Self) {
        gobject_ffi::g_value_set_enum(value.to_glib_none_mut().0, this.to_glib())
    }
}

#[derive(Debug, Eq, PartialEq, Ord, PartialOrd, Hash)]
#[derive(Clone, Copy)]
pub enum Role {
    Invalid,
    AcceleratorLabel,
    Alert,
    Animation,
    Arrow,
    Calendar,
    Canvas,
    CheckBox,
    CheckMenuItem,
    ColorChooser,
    ColumnHeader,
    ComboBox,
    DateEditor,
    DesktopIcon,
    DesktopFrame,
    Dial,
    Dialog,
    DirectoryPane,
    DrawingArea,
    FileChooser,
    Filler,
    FontChooser,
    Frame,
    GlassPane,
    HtmlContainer,
    Icon,
    Image,
    InternalFrame,
    Label,
    LayeredPane,
    List,
    ListItem,
    Menu,
    MenuBar,
    MenuItem,
    OptionPane,
    PageTab,
    PageTabList,
    Panel,
    PasswordText,
    PopupMenu,
    ProgressBar,
    PushButton,
    RadioButton,
    RadioMenuItem,
    RootPane,
    RowHeader,
    ScrollBar,
    ScrollPane,
    Separator,
    Slider,
    SplitPane,
    SpinButton,
    Statusbar,
    Table,
    TableCell,
    TableColumnHeader,
    TableRowHeader,
    TearOffMenuItem,
    Terminal,
    Text,
    ToggleButton,
    ToolBar,
    ToolTip,
    Tree,
    TreeTable,
    Unknown,
    Viewport,
    Window,
    Header,
    Footer,
    Paragraph,
    Ruler,
    Application,
    Autocomplete,
    EditBar,
    Embedded,
    Entry,
    Chart,
    Caption,
    DocumentFrame,
    Heading,
    Page,
    Section,
    RedundantObject,
    Form,
    Link,
    InputMethodWindow,
    TableRow,
    TreeItem,
    DocumentSpreadsheet,
    DocumentPresentation,
    DocumentText,
    DocumentWeb,
    DocumentEmail,
    Comment,
    ListBox,
    Grouping,
    ImageMap,
    Notification,
    InfoBar,
    LevelBar,
    TitleBar,
    BlockQuote,
    Audio,
    Video,
    Definition,
    Article,
    Landmark,
    Log,
    Marquee,
    Math,
    Rating,
    Timer,
    DescriptionList,
    DescriptionTerm,
    DescriptionValue,
    Static,
    MathFraction,
    MathRoot,
    Subscript,
    Superscript,
    Footnote,
    LastDefined,
    #[doc(hidden)]
    __Unknown(i32),
}

#[doc(hidden)]
impl ToGlib for Role {
    type GlibType = ffi::AtkRole;

    fn to_glib(&self) -> ffi::AtkRole {
        match *self {
            Role::Invalid => ffi::ATK_ROLE_INVALID,
            Role::AcceleratorLabel => ffi::ATK_ROLE_ACCEL_LABEL,
            Role::Alert => ffi::ATK_ROLE_ALERT,
            Role::Animation => ffi::ATK_ROLE_ANIMATION,
            Role::Arrow => ffi::ATK_ROLE_ARROW,
            Role::Calendar => ffi::ATK_ROLE_CALENDAR,
            Role::Canvas => ffi::ATK_ROLE_CANVAS,
            Role::CheckBox => ffi::ATK_ROLE_CHECK_BOX,
            Role::CheckMenuItem => ffi::ATK_ROLE_CHECK_MENU_ITEM,
            Role::ColorChooser => ffi::ATK_ROLE_COLOR_CHOOSER,
            Role::ColumnHeader => ffi::ATK_ROLE_COLUMN_HEADER,
            Role::ComboBox => ffi::ATK_ROLE_COMBO_BOX,
            Role::DateEditor => ffi::ATK_ROLE_DATE_EDITOR,
            Role::DesktopIcon => ffi::ATK_ROLE_DESKTOP_ICON,
            Role::DesktopFrame => ffi::ATK_ROLE_DESKTOP_FRAME,
            Role::Dial => ffi::ATK_ROLE_DIAL,
            Role::Dialog => ffi::ATK_ROLE_DIALOG,
            Role::DirectoryPane => ffi::ATK_ROLE_DIRECTORY_PANE,
            Role::DrawingArea => ffi::ATK_ROLE_DRAWING_AREA,
            Role::FileChooser => ffi::ATK_ROLE_FILE_CHOOSER,
            Role::Filler => ffi::ATK_ROLE_FILLER,
            Role::FontChooser => ffi::ATK_ROLE_FONT_CHOOSER,
            Role::Frame => ffi::ATK_ROLE_FRAME,
            Role::GlassPane => ffi::ATK_ROLE_GLASS_PANE,
            Role::HtmlContainer => ffi::ATK_ROLE_HTML_CONTAINER,
            Role::Icon => ffi::ATK_ROLE_ICON,
            Role::Image => ffi::ATK_ROLE_IMAGE,
            Role::InternalFrame => ffi::ATK_ROLE_INTERNAL_FRAME,
            Role::Label => ffi::ATK_ROLE_LABEL,
            Role::LayeredPane => ffi::ATK_ROLE_LAYERED_PANE,
            Role::List => ffi::ATK_ROLE_LIST,
            Role::ListItem => ffi::ATK_ROLE_LIST_ITEM,
            Role::Menu => ffi::ATK_ROLE_MENU,
            Role::MenuBar => ffi::ATK_ROLE_MENU_BAR,
            Role::MenuItem => ffi::ATK_ROLE_MENU_ITEM,
            Role::OptionPane => ffi::ATK_ROLE_OPTION_PANE,
            Role::PageTab => ffi::ATK_ROLE_PAGE_TAB,
            Role::PageTabList => ffi::ATK_ROLE_PAGE_TAB_LIST,
            Role::Panel => ffi::ATK_ROLE_PANEL,
            Role::PasswordText => ffi::ATK_ROLE_PASSWORD_TEXT,
            Role::PopupMenu => ffi::ATK_ROLE_POPUP_MENU,
            Role::ProgressBar => ffi::ATK_ROLE_PROGRESS_BAR,
            Role::PushButton => ffi::ATK_ROLE_PUSH_BUTTON,
            Role::RadioButton => ffi::ATK_ROLE_RADIO_BUTTON,
            Role::RadioMenuItem => ffi::ATK_ROLE_RADIO_MENU_ITEM,
            Role::RootPane => ffi::ATK_ROLE_ROOT_PANE,
            Role::RowHeader => ffi::ATK_ROLE_ROW_HEADER,
            Role::ScrollBar => ffi::ATK_ROLE_SCROLL_BAR,
            Role::ScrollPane => ffi::ATK_ROLE_SCROLL_PANE,
            Role::Separator => ffi::ATK_ROLE_SEPARATOR,
            Role::Slider => ffi::ATK_ROLE_SLIDER,
            Role::SplitPane => ffi::ATK_ROLE_SPLIT_PANE,
            Role::SpinButton => ffi::ATK_ROLE_SPIN_BUTTON,
            Role::Statusbar => ffi::ATK_ROLE_STATUSBAR,
            Role::Table => ffi::ATK_ROLE_TABLE,
            Role::TableCell => ffi::ATK_ROLE_TABLE_CELL,
            Role::TableColumnHeader => ffi::ATK_ROLE_TABLE_COLUMN_HEADER,
            Role::TableRowHeader => ffi::ATK_ROLE_TABLE_ROW_HEADER,
            Role::TearOffMenuItem => ffi::ATK_ROLE_TEAR_OFF_MENU_ITEM,
            Role::Terminal => ffi::ATK_ROLE_TERMINAL,
            Role::Text => ffi::ATK_ROLE_TEXT,
            Role::ToggleButton => ffi::ATK_ROLE_TOGGLE_BUTTON,
            Role::ToolBar => ffi::ATK_ROLE_TOOL_BAR,
            Role::ToolTip => ffi::ATK_ROLE_TOOL_TIP,
            Role::Tree => ffi::ATK_ROLE_TREE,
            Role::TreeTable => ffi::ATK_ROLE_TREE_TABLE,
            Role::Unknown => ffi::ATK_ROLE_UNKNOWN,
            Role::Viewport => ffi::ATK_ROLE_VIEWPORT,
            Role::Window => ffi::ATK_ROLE_WINDOW,
            Role::Header => ffi::ATK_ROLE_HEADER,
            Role::Footer => ffi::ATK_ROLE_FOOTER,
            Role::Paragraph => ffi::ATK_ROLE_PARAGRAPH,
            Role::Ruler => ffi::ATK_ROLE_RULER,
            Role::Application => ffi::ATK_ROLE_APPLICATION,
            Role::Autocomplete => ffi::ATK_ROLE_AUTOCOMPLETE,
            Role::EditBar => ffi::ATK_ROLE_EDITBAR,
            Role::Embedded => ffi::ATK_ROLE_EMBEDDED,
            Role::Entry => ffi::ATK_ROLE_ENTRY,
            Role::Chart => ffi::ATK_ROLE_CHART,
            Role::Caption => ffi::ATK_ROLE_CAPTION,
            Role::DocumentFrame => ffi::ATK_ROLE_DOCUMENT_FRAME,
            Role::Heading => ffi::ATK_ROLE_HEADING,
            Role::Page => ffi::ATK_ROLE_PAGE,
            Role::Section => ffi::ATK_ROLE_SECTION,
            Role::RedundantObject => ffi::ATK_ROLE_REDUNDANT_OBJECT,
            Role::Form => ffi::ATK_ROLE_FORM,
            Role::Link => ffi::ATK_ROLE_LINK,
            Role::InputMethodWindow => ffi::ATK_ROLE_INPUT_METHOD_WINDOW,
            Role::TableRow => ffi::ATK_ROLE_TABLE_ROW,
            Role::TreeItem => ffi::ATK_ROLE_TREE_ITEM,
            Role::DocumentSpreadsheet => ffi::ATK_ROLE_DOCUMENT_SPREADSHEET,
            Role::DocumentPresentation => ffi::ATK_ROLE_DOCUMENT_PRESENTATION,
            Role::DocumentText => ffi::ATK_ROLE_DOCUMENT_TEXT,
            Role::DocumentWeb => ffi::ATK_ROLE_DOCUMENT_WEB,
            Role::DocumentEmail => ffi::ATK_ROLE_DOCUMENT_EMAIL,
            Role::Comment => ffi::ATK_ROLE_COMMENT,
            Role::ListBox => ffi::ATK_ROLE_LIST_BOX,
            Role::Grouping => ffi::ATK_ROLE_GROUPING,
            Role::ImageMap => ffi::ATK_ROLE_IMAGE_MAP,
            Role::Notification => ffi::ATK_ROLE_NOTIFICATION,
            Role::InfoBar => ffi::ATK_ROLE_INFO_BAR,
            Role::LevelBar => ffi::ATK_ROLE_LEVEL_BAR,
            Role::TitleBar => ffi::ATK_ROLE_TITLE_BAR,
            Role::BlockQuote => ffi::ATK_ROLE_BLOCK_QUOTE,
            Role::Audio => ffi::ATK_ROLE_AUDIO,
            Role::Video => ffi::ATK_ROLE_VIDEO,
            Role::Definition => ffi::ATK_ROLE_DEFINITION,
            Role::Article => ffi::ATK_ROLE_ARTICLE,
            Role::Landmark => ffi::ATK_ROLE_LANDMARK,
            Role::Log => ffi::ATK_ROLE_LOG,
            Role::Marquee => ffi::ATK_ROLE_MARQUEE,
            Role::Math => ffi::ATK_ROLE_MATH,
            Role::Rating => ffi::ATK_ROLE_RATING,
            Role::Timer => ffi::ATK_ROLE_TIMER,
            Role::DescriptionList => ffi::ATK_ROLE_DESCRIPTION_LIST,
            Role::DescriptionTerm => ffi::ATK_ROLE_DESCRIPTION_TERM,
            Role::DescriptionValue => ffi::ATK_ROLE_DESCRIPTION_VALUE,
            Role::Static => ffi::ATK_ROLE_STATIC,
            Role::MathFraction => ffi::ATK_ROLE_MATH_FRACTION,
            Role::MathRoot => ffi::ATK_ROLE_MATH_ROOT,
            Role::Subscript => ffi::ATK_ROLE_SUBSCRIPT,
            Role::Superscript => ffi::ATK_ROLE_SUPERSCRIPT,
            Role::Footnote => ffi::ATK_ROLE_FOOTNOTE,
            Role::LastDefined => ffi::ATK_ROLE_LAST_DEFINED,
            Role::__Unknown(value) => value
        }
    }
}

#[doc(hidden)]
impl FromGlib<ffi::AtkRole> for Role {
    fn from_glib(value: ffi::AtkRole) -> Self {
        skip_assert_initialized!();
        match value {
            0 => Role::Invalid,
            1 => Role::AcceleratorLabel,
            2 => Role::Alert,
            3 => Role::Animation,
            4 => Role::Arrow,
            5 => Role::Calendar,
            6 => Role::Canvas,
            7 => Role::CheckBox,
            8 => Role::CheckMenuItem,
            9 => Role::ColorChooser,
            10 => Role::ColumnHeader,
            11 => Role::ComboBox,
            12 => Role::DateEditor,
            13 => Role::DesktopIcon,
            14 => Role::DesktopFrame,
            15 => Role::Dial,
            16 => Role::Dialog,
            17 => Role::DirectoryPane,
            18 => Role::DrawingArea,
            19 => Role::FileChooser,
            20 => Role::Filler,
            21 => Role::FontChooser,
            22 => Role::Frame,
            23 => Role::GlassPane,
            24 => Role::HtmlContainer,
            25 => Role::Icon,
            26 => Role::Image,
            27 => Role::InternalFrame,
            28 => Role::Label,
            29 => Role::LayeredPane,
            30 => Role::List,
            31 => Role::ListItem,
            32 => Role::Menu,
            33 => Role::MenuBar,
            34 => Role::MenuItem,
            35 => Role::OptionPane,
            36 => Role::PageTab,
            37 => Role::PageTabList,
            38 => Role::Panel,
            39 => Role::PasswordText,
            40 => Role::PopupMenu,
            41 => Role::ProgressBar,
            42 => Role::PushButton,
            43 => Role::RadioButton,
            44 => Role::RadioMenuItem,
            45 => Role::RootPane,
            46 => Role::RowHeader,
            47 => Role::ScrollBar,
            48 => Role::ScrollPane,
            49 => Role::Separator,
            50 => Role::Slider,
            51 => Role::SplitPane,
            52 => Role::SpinButton,
            53 => Role::Statusbar,
            54 => Role::Table,
            55 => Role::TableCell,
            56 => Role::TableColumnHeader,
            57 => Role::TableRowHeader,
            58 => Role::TearOffMenuItem,
            59 => Role::Terminal,
            60 => Role::Text,
            61 => Role::ToggleButton,
            62 => Role::ToolBar,
            63 => Role::ToolTip,
            64 => Role::Tree,
            65 => Role::TreeTable,
            66 => Role::Unknown,
            67 => Role::Viewport,
            68 => Role::Window,
            69 => Role::Header,
            70 => Role::Footer,
            71 => Role::Paragraph,
            72 => Role::Ruler,
            73 => Role::Application,
            74 => Role::Autocomplete,
            75 => Role::EditBar,
            76 => Role::Embedded,
            77 => Role::Entry,
            78 => Role::Chart,
            79 => Role::Caption,
            80 => Role::DocumentFrame,
            81 => Role::Heading,
            82 => Role::Page,
            83 => Role::Section,
            84 => Role::RedundantObject,
            85 => Role::Form,
            86 => Role::Link,
            87 => Role::InputMethodWindow,
            88 => Role::TableRow,
            89 => Role::TreeItem,
            90 => Role::DocumentSpreadsheet,
            91 => Role::DocumentPresentation,
            92 => Role::DocumentText,
            93 => Role::DocumentWeb,
            94 => Role::DocumentEmail,
            95 => Role::Comment,
            96 => Role::ListBox,
            97 => Role::Grouping,
            98 => Role::ImageMap,
            99 => Role::Notification,
            100 => Role::InfoBar,
            101 => Role::LevelBar,
            102 => Role::TitleBar,
            103 => Role::BlockQuote,
            104 => Role::Audio,
            105 => Role::Video,
            106 => Role::Definition,
            107 => Role::Article,
            108 => Role::Landmark,
            109 => Role::Log,
            110 => Role::Marquee,
            111 => Role::Math,
            112 => Role::Rating,
            113 => Role::Timer,
            114 => Role::DescriptionList,
            115 => Role::DescriptionTerm,
            116 => Role::DescriptionValue,
            117 => Role::Static,
            118 => Role::MathFraction,
            119 => Role::MathRoot,
            120 => Role::Subscript,
            121 => Role::Superscript,
            122 => Role::Footnote,
            123 => Role::LastDefined,
            value => Role::__Unknown(value),
        }
    }
}

impl StaticType for Role {
    fn static_type() -> Type {
        unsafe { from_glib(ffi::atk_role_get_type()) }
    }
}

impl<'a> FromValueOptional<'a> for Role {
    unsafe fn from_value_optional(value: &Value) -> Option<Self> {
        Some(FromValue::from_value(value))
    }
}

impl<'a> FromValue<'a> for Role {
    unsafe fn from_value(value: &Value) -> Self {
        from_glib(gobject_ffi::g_value_get_enum(value.to_glib_none().0))
    }
}

impl SetValue for Role {
    unsafe fn set_value(value: &mut Value, this: &Self) {
        gobject_ffi::g_value_set_enum(value.to_glib_none_mut().0, this.to_glib())
    }
}

